Aktuelle Klassen:

obj
par
eqnList


Neue Klassen:

-------------- Functions ----------------------------------

# par.fn (par):
#   structure:  function(p "named numeric", fixed "logical", deriv "logical") {
#                 pinner "named numeric"
#                 attr(pinner, "deriv") "matrix"
#                 class(pinner) "par.vec"
#                 return(pinner)
#               }
#   attributes: NULL
#   comes from: P(), Pi()
#   goes to:    print(), %o%

# prd.fn:
#   structure:  function(times "numeric", pars "named numeric", deriv "logical", ...) {
#                 prediction "matrix"
#                 attr(prediction, "deriv") "matrix"
#                 attr(prediction, "parameters") "character"
#                 out list(prediction)
#                 class(out) "prd.list"
#                 return(out)
#               }
#   attributes: NULL
#   comes from: Xs(), Xd()
#   goes to:    print()

# obs.fn:
#   structure:  function(prediction "prd.list", pars "named numeric", ...) {
#                 observation "matrix"
#                 attr(observation, "deriv") "matrix"
#                 attr(observation, "parameters") "character"
#                 out list(observation)
#                 class(out) "prd.list"
#                 return(out)
#               }
#   attributes: NULL
#   comes from: Y()
#   goes to:    print()

obj.fn
  structure:  function(pouter "named numeric", fixed "named numeric", deriv "logical", ...) {
                out list(value, gradient, hessian)
                attr(out, ...) "numeric of length 1"
                return(out)
              }
  attributes: NULL
  comes from: user-defined
  goes to:    trust()

-------------- Tables/Data frames ----------------------------------

# obj.frame:
#   structure:  data.frame(... "numeric")
#   attributes: deriv "matrix"
#   comes from: res()
#   goes to:    print(), plot(), wrss(), nls.lm(?), lm.geodesic(?)

# par.frame:
#   structure:  data.frame(metanames "numeric/character", obj.attributes "numeric", parameters "numeric")
#   attributes: metanames "character", obj.attributes "character", parameters "character"
#   comes from: mstrust(), profile(), msnarrow()
#   goes to:    plot(), print(), plotArray(), plotProfile(), plotPaths(), rbind(), msbest(), plSelectMin,

-------------- Lists ----------------------------------

# eqn.frame (eqnList):
#   strucure:   list(smatrix "matrix", states "character", rates "character", description "character", volumes "character", fluxes "character")
#   attributes: NULL
#   comes from: generateEquations(), addReaction(), addObservables(), as.eqn.frame(), mergeReactions(), removeReactions(), subset()
#   goes to:    generateModel(), as.eqn.vec(), addReaction(), addObservable(), rbind(), removeReactions(), subset(), write.eqn.frame(), print(), steadyStatesSymb(?)

# obj.list (obj)
#   structure:  list(value "numeric 1", gradient "named numeric", hessian "named matrix")
#   attributes: numeric attributes of length 1
#   comes from: obj() user defined funtion, wrss(), constraintL2(), priorL2(), constraintExp2(), datapointL2()
#   goes to:    print(), plot()

# prd.list:
#   structure:  list(prediction "matrix")
#   attributes: deriv "matrix", parameters "character"
#   comes from: Xs()(), Xd()(), Y()()
#   goes to:    plot(), print(), res(), lbind(), wide2long(), plotPrediction(), plotCombined(), plotFluxes(?)

# data.list:
#   structure:  list(condition = data.frame(name, time, value, sigma))
#   attributes: NULL
#   comes from: user-defined, simulateData(), reduceReplicates()
#   goes to:    plot(), print(), res(), data2forc(), lbind(), plotData(), plotCombined()
 
# par.list:
#   structure:  par.frame
#   attributes: fitlist "list"
#   comes from: mstrust(), msnarrow()
#   goes to:    rbind()

-------------- Vectors ----------------------------------

# eqn.vec:
#   structure:  equations "named numeric"
#   attributes: NULL
#   comes from: as.eqnvec()
#   goes to:    Y(), generateModel()

# par.vec:
#   structure:  pinner "named numeric"
#   attributes: deriv "matrix"
#   come from:  P()(), Pi()()
#   goes to:    print(), plot(), Xs()(), Xd()(), Y()(), constraintL2(), priorL2(), constraintExp2(), datapointL2(), plotFluxes()

